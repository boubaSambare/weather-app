[{"/Users/bouba/Desktop/project/meteo-app/src/serviceWorker.js":"1","/Users/bouba/Desktop/project/meteo-app/src/index.js":"2","/Users/bouba/Desktop/project/meteo-app/src/components/App.jsx":"3","/Users/bouba/Desktop/project/meteo-app/src/components/navbar/MnavBar.jsx":"4","/Users/bouba/Desktop/project/meteo-app/src/app/store.js":"5","/Users/bouba/Desktop/project/meteo-app/src/features/meteoDataSlice.js":"6","/Users/bouba/Desktop/project/meteo-app/src/components/meteo/MeteoCard.jsx":"7","/Users/bouba/Desktop/project/meteo-app/src/api/weather.js":"8"},{"size":5141,"mtime":1611774538656,"results":"9","hashOfConfig":"10"},{"size":700,"mtime":1612049939638,"results":"11","hashOfConfig":"10"},{"size":921,"mtime":1613349996821,"results":"12","hashOfConfig":"10"},{"size":1353,"mtime":1613348989861,"results":"13","hashOfConfig":"10"},{"size":205,"mtime":1612149096535,"results":"14","hashOfConfig":"10"},{"size":1708,"mtime":1613349159219,"results":"15","hashOfConfig":"10"},{"size":3613,"mtime":1613388831040,"results":"16","hashOfConfig":"10"},{"size":565,"mtime":1612901142172,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s8b5w6",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bouba/Desktop/project/meteo-app/src/serviceWorker.js",[],"/Users/bouba/Desktop/project/meteo-app/src/index.js",[],"/Users/bouba/Desktop/project/meteo-app/src/components/App.jsx",[],"/Users/bouba/Desktop/project/meteo-app/src/components/navbar/MnavBar.jsx",["35"],"/Users/bouba/Desktop/project/meteo-app/src/app/store.js",[],"/Users/bouba/Desktop/project/meteo-app/src/features/meteoDataSlice.js",[],"/Users/bouba/Desktop/project/meteo-app/src/components/meteo/MeteoCard.jsx",["36"],"import React, { useEffect, useState } from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"@emotion/styled\";\nimport { css, jsx } from \"@emotion/react\";\nimport { fechtDaylyWeather } from \"../../api/weather\";\nimport VerticalAlign from \"../../styles/components/VerticalAlign\";\n\nconst MfontSize = styled.span(({ size = 15 }) => ({\n  fontSize: `${size}px`,\n}));\n\nconst MeteoCard = (props) => {\n  const meteoData = useSelector((state) => state.meteoData.value);\n  const isLoading = useSelector((state) => state.meteoData.isLoading);\n  const [meteoDailyData, setMeteoDailyData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fechtDaylyWeather(\n        meteoData.coord.lon,\n        meteoData.coord.lat\n      );\n      setMeteoDailyData(data);\n    };\n\n    if (meteoData?.cod === 200) {\n      fetchData();\n    }\n  }, [meteoData]);\n\n  console.log(meteoDailyData);\n  return (\n    <>\n      {isLoading && <h2>loading</h2>}\n      {!!meteoData && (\n        <Card style={{ width: \"auto\", height: \"auto\" }}>\n          <Card.Header className=\"text-center\">\n            <Card.Title>{meteoData?.name}</Card.Title>\n            <Card.Text>{meteoData?.weather[0]?.main}</Card.Text>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Col md={6}>\n                <Row>\n                  <Col>\n                    <img\n                      width={100}\n                      height={100}\n                      className=\"mr-3\"\n                      src={`../../icons/${meteoData?.weather[0].icon}.svg`}\n                      alt=\"Generic placeholder\"\n                      loading=\"lazy\"\n                    />\n                  </Col>\n                  <Col>\n                    <p>\n                      <MfontSize size={40}>\n                        {Math.floor(meteoData.main.temp - 273)}\n                      </MfontSize>\n                      <MfontSize>&#8451;</MfontSize>\n                    </p>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row\n              css={css`\n                font-size: 30px;\n                display: flex;\n                flex-wrap: nowrap;\n                @media (min-width: 420px) {\n                  flex-wrap: wrap;\n                }\n              `}\n            >\n              {meteoDailyData &&\n                meteoDailyData?.daily.map((data, k) => (\n                  <Col key={k}>\n                    <VerticalAlign>\n                      <span>\n                        {\" \"}\n                        {\n                          new Date(data.dt * 1000).toDateString().split(\" \")[0]\n                        }{\" \"}\n                      </span>\n                      <span>\n                        <img\n                          width={30}\n                          height={30}\n                          className=\"mr-3\"\n                          src={`../../icons/${data.weather[0].icon}.svg`}\n                          alt=\"Generic placeholder\"\n                          loading=\"lazy\"\n                        />\n                      </span>\n                      <span>{data.weather[0].description}</span>\n                      <span>\n                        Temp: {Math.floor(data.temp.day - 273)}{\" \"}\n                        <MfontSize>&#8451;</MfontSize>\n                      </span>\n                    </VerticalAlign>\n                  </Col>\n                ))}\n            </Row>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default MeteoCard;\n","/Users/bouba/Desktop/project/meteo-app/src/api/weather.js",[],{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":17},{"ruleId":"37","severity":1,"message":"41","line":5,"column":15,"nodeType":"39","messageId":"40","endLine":5,"endColumn":18},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'jsx' is defined but never used."]